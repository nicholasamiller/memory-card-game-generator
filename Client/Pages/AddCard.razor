@page "/add"
@using MemoryCardGenerator.Shared
@inject ICardRepository CardRepository

<EditForm OnValidSubmit="Submit" Model="@_card">
     <DataAnnotationsValidator />
  <div class="mb-3">
    <label for="chinese" class="col-form-label">汉字 Chinese Character(s)</label>
     <div class="mb-3 input-group">
        <InputText @bind-Value=_card.Chinese class=form-control id=chinese/>
        <button class="btn btn-outline-secondary" type="button">Translate</button>
        <ValidationMessage For="@(() => _card.Chinese)"/>
    </div>
  </div>
  <div class="mb-3">
    <label for="pinyin" class="form-label">拼音 Pinyin</label>
    <InputText @bind-Value=_card.Pinyin class=form-control id=pinyin/>
        <ValidationMessage For="@(() => _card.Pinyin)"/>
  </div>
  <div class="mb-3">
    <label for="english" class="form-label">英语 English</label>
    <InputText @bind-Value=_card.English class="form-control" id="english"></InputText>
        <ValidationMessage For="@(() => _card.English)"/>
  </div>
  // todo: autocomplete
  <div class="mb-3">
    <label for="tags" class="form-label">Tags</label>
    <InputText @bind-Value=_tags class="form-control" id="tags"></InputText>
        <ValidationMessage For="@(() => _tags)"/>
  </div>
  
  <div>

  <button type="submit" class="btn btn-primary">提交 Add</button>
  </div>
</EditForm>

@code {

    CardDataDto _card = new CardDataDto();
    string _tags = String.Empty;


	private async Task Submit()
	{
        var tags = _tags.Split(",").Select(t => t.Trim()).ToArray();
        CardRepository.AddCard(new CardRecord() { CardDataDto = _card, Tags = tags });
        _card = new CardDataDto();
        StateHasChanged();
    }

}
